Le projet NightScan classe des cris d’animaux à partir de fichiers audio.
Voici un mode d’emploi simplifié pour un utilisateur non développeur.

1. Préparer son environnement
Installer Python (version 3.10 ou plus)

Sur Windows : télécharger Python depuis python.org et l’installer.

Sur macOS et Linux : Python est souvent déjà présent. Vérifiez avec python --version dans le terminal.

Installer FFMPEG
Ce logiciel est requis pour convertir les fichiers audio.

Windows : télécharger « ffmpeg » sur ffmpeg.org et suivre les instructions d’installation.

macOS : peut s’installer via Homebrew (brew install ffmpeg).

Linux : souvent disponible dans les dépôts (sudo apt install ffmpeg sur Ubuntu par exemple).

Créer un dossier pour le projet
Ouvrir un terminal ou un invite de commandes et saisir :

git clone https://github.com/votre-utilisateur/NightScan.git
cd NightScan
Installer les dépendances du projet
Toujours dans le terminal, exécuter :

python -m venv env          # crée un environnement isolé
source env/bin/activate     # sur Windows : env\Scripts\activate
pip install -r requirements.txt
2. Préparer les données audio
Organiser vos enregistrements

Créez un dossier data/raw.

À l’intérieur, ajoutez un sous-dossier pour chaque type d’animal :
data/raw/chat/, data/raw/chien/, etc.

Placez vos fichiers MP3 dans les bons sous-dossiers.

Lancer le prétraitement
Dans le terminal :

python scripts/preprocess.py --input_dir data/raw --output_dir data/processed --workers 4
Le programme :

Convertit les MP3 en WAV.

Découpe les sons en segments de 8 secondes.

Crée des « spectrogrammes » (images représentant les sons).

Génère trois fichiers CSV (train.csv, val.csv et test.csv) décrivant les données.

Résultat : un nouveau dossier data/processed contenant les WAV découpés, les spectrogrammes et les CSV.

3. Entraîner le modèle
Lancer l’entraînement
Toujours dans le terminal :

python scripts/train.py --csv_dir data/processed/csv --model_dir models --pretrained
Le programme lit les CSV, charge les spectrogrammes et entraîne le modèle.

L’entraînement peut durer plusieurs minutes (ou plus, selon la puissance de l’ordinateur).

Le meilleur modèle obtenu est enregistré sous models/best_model.pth.

4. Identifier des sons
Préparer un ou plusieurs fichiers audio
Placez vos fichiers WAV ou MP3 (par exemple moncricha.mp3) dans un dossier accessible.

Lancer la prédiction

python scripts/predict.py --model_path models/best_model.pth --csv_dir data/processed/csv moncricha.mp3
Le script découpe l’audio, applique le modèle et affiche pour chaque extrait les trois espèces les plus probables (ex. : chat, chien, etc.) avec leur score.

5. Conseils et dépannage
Pas de son détecté ?
Vérifiez que votre enregistrement contient bien des cris ou des sons assez forts. Les segments très silencieux sont ignorés.

Message d’erreur sur FFMPEG ?
Revoir l’installation de FFMPEG et vérifier qu’il est dans votre PATH (essayez la commande ffmpeg -version dans un terminal).

Utilisation de plusieurs cœurs
L’option --workers 4 (par exemple) accélère le prétraitement sur des machines possédant plusieurs processeurs. Vous pouvez l’ajuster selon votre PC.

Sauvegarde des modèles
Les modèles entraînés sont stockés dans le dossier models. Conservez-les pour éviter de réentraîner le système à chaque fois.

En résumé, NightScan transforme vos enregistrements en images audio, entraîne un modèle à reconnaître vos animaux, puis vous permet d’identifier le contenu d’un nouveau fichier sonore. Une connaissance minimale des commandes dans un terminal suffit pour suivre ces étapes.
