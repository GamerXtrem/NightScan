# Configuration Nginx optimisée pour NightScan VPS Lite
# Ressources: 4GB RAM, 2 vCPU, 50GB SSD

# Configuration générale optimisée VPS Lite
user nginx;
worker_processes 2;  # Optimal pour 2 vCPU
worker_connections 1024;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Configuration de base
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Optimisations performances VPS Lite
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Gestion mémoire optimisée pour 4GB
    client_max_body_size 50M;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Compression (économise bande passante)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Headers de sécurité
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; frame-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    
    # Rate limiting (protection DDoS)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # Logging format optimisé
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Cache pour ressources statiques
    map $sent_http_content_type $expires {
        "text/html"                 epoch;
        "text/css"                  max;
        "application/javascript"    max;
        "image/png"                 max;
        "image/jpg"                 max;
        "image/jpeg"                max;
        "image/gif"                 max;
        "image/ico"                 max;
        "image/svg+xml"             max;
        default                     off;
    }
    
    expires $expires;
    
    # Configuration upstream pour load balancing
    upstream nightscan_web {
        least_conn;
        server web:5000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    upstream nightscan_api {
        least_conn;
        server prediction-api:8080 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }
    
    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Configuration SSL commune
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Configuration HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Serveur principal - Application Web
    server {
        listen 80;
        server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
        
        # Redirection HTTPS obligatoire
        location / {
            return 301 https://$host$request_uri;
        }
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
        
        # Certificats SSL Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem;
        
        # Configuration racine
        root /var/www/html;
        index index.html;
        
        # Rate limiting Web
        limit_req zone=web burst=20 nodelay;
        
        # Application principale
        location / {
            proxy_pass http://nightscan_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts optimisés VPS Lite
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            
            # Buffers optimisés pour économiser RAM
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
            proxy_busy_buffers_size 16k;
        }
        
        # API de prédiction
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://nightscan_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts pour ML processing
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;
        }
        
        # Authentication endpoints (rate limiting strict)
        location ~ ^/(login|register|api/auth) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://nightscan_web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Ressources statiques (cache agressif)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            
            # Essayer fichiers locaux puis proxy
            try_files $uri @static_proxy;
        }
        
        location @static_proxy {
            proxy_pass http://nightscan_web;
            proxy_cache_valid 200 1d;
            expires 1d;
        }
        
        # Health check
        location /health {
            access_log off;
            proxy_pass http://nightscan_web/health;
            proxy_set_header Host $host;
        }
        
        # Monitoring interne (accès restreint)
        location /metrics {
            deny all;
            return 403;
        }
    }
    
    # Sous-domaine API (optionnel)
    server {
        listen 80;
        server_name api.${DOMAIN_NAME};
        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name api.${DOMAIN_NAME};
        
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem;
        
        limit_req zone=api burst=20 nodelay;
        
        location / {
            proxy_pass http://nightscan_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;
        }
    }
    
    # Sous-domaine Monitoring (accès protégé)
    server {
        listen 80;
        server_name monitoring.${DOMAIN_NAME};
        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name monitoring.${DOMAIN_NAME};
        
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem;
        
        # Authentification basique (sera remplacée par OAuth)
        auth_basic "NightScan Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuration spéciale pour Grafana
            proxy_set_header Authorization "";
        }
        
        # WebSocket pour Grafana live
        location /api/live/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_pass http://grafana;
        }
    }
    
    # Page de maintenance (si nécessaire)
    server {
        listen 8080;
        server_name _;
        
        root /var/www/maintenance;
        index maintenance.html;
        
        location / {
            try_files $uri $uri/ /maintenance.html;
        }
    }
}

# Stream pour monitoring TCP (optionnel)
stream {
    upstream postgres_monitoring {
        server postgres:5432;
    }
    
    upstream redis_monitoring {
        server redis:6379;
    }
    
    # Proxy pour connexions DB externes (à activer si nécessaire)
    # server {
    #     listen 15432;
    #     proxy_pass postgres_monitoring;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
}